# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:8.10

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      # run tests!
      - run: |
          npm install
          npm rebuild node-sass
          npm run test:unit

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

  deploy:
    docker:
      - image: circleci/buildpack-deps:stretch
    environment:
      IMAGE_NAME: tbrown1979/avalon-front-end
    working_directory: ~/app
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker build -t $IMAGE_NAME:latest .
      - run:
          name: Push Docker Image
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$CIRCLE_SHA1
            docker push $IMAGE_NAME:latest
            docker push $IMAGE_NAME:$CIRCLE_SHA1
#      - run:
#          name: Install envsubst
#          command: |
#            sudo apt-get update && sudo apt-get -y install gettext-base
#      - run:
#          name: Install kubectl
#          command: |
#            curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
#            chmod u+x ./kubectl
#      - run:
#          name: Deploy Code
#          command: ./scripts/cicd-deploy.sh

workflows:
  version: 2
  build-master:
    jobs:
      - deploy:
          filters:
            branches:
              only: master
      - build:
          filters:
            branches:
              ignore: master